(()=>{"use strict";var e={n:t=>{var a=t&&t.__esModule?()=>t.default:()=>t;return e.d(a,{a}),a},d:(t,a)=>{for(var s in a)e.o(a,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:a[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{MCSManagerClient:()=>u});const a=require("lodash");var s=e.n(a);const n=require("axios");var r=e.n(n);class i{#e;#t;constructor(e,t){this.#e=t,this.#t=e}get daemonUUID(){return this.#e}remove=async()=>{var e,t;return await(e=this.#t,t=this.#e,e.delete("/service/remote_service",{params:{uuid:t}}))};link=async()=>{var e,t;return await(e=this.#t,t=this.#e,e.get("/service/link_remote_service",{params:{uuid:t}}))};update=async e=>{const t=await((e,t,a)=>e.put("/service/remote_service",{...a},{params:{uuid:t}}))(this.#t,this.#e,e);return t}}class o{#a;#s;#t;constructor(e,t,a){this.#a=t,this.#s=a,this.#t=e}get InstanceUUID(){return this.#a}get DaemonUUID(){return this.#s.daemonUUID}get useDaemon(){return this.#s}getInstanceDetail=async()=>{var e,t,a;return await(e=this.#t,t=this.#a,a=this.#s.daemonUUID,e.get("/instance",{params:{daemonId:a,uuid:t}}))};updateInstanceConfig=async e=>{var t,a,s,n;return await(t=this.#t,a=this.#a,s=this.#s.daemonUUID,n=e,t.put("/instance",n,{params:{daemonId:s,uuid:a}}))};deleteInstance=async e=>{const t=await((e,t,a,s)=>("string"==typeof t&&(t=[t]),e.delete("/instance",{params:{daemonId:a},data:{uuids:t,deleteFile:s.deleteFile}})))(this.#t,this.#a,this.#s.daemonUUID,e);return t};start=()=>{return e=this.#t,t=this.#a,a=this.#s.daemonUUID,e.get("/protected_instance/open",{params:{daemonId:a,uuid:t}});var e,t,a};stop=()=>{return e=this.#t,t=this.#a,a=this.#s.daemonUUID,e.get("/protected_instance/stop",{params:{daemonId:a,uuid:t}});var e,t,a};kill=()=>{return e=this.#t,t=this.#a,a=this.#s.daemonUUID,e.get("/protected_instance/kill",{params:{daemonId:a,uuid:t}});var e,t,a};restart=()=>{return e=this.#t,t=this.#a,a=this.#s.daemonUUID,e.get("/protected_instance/restart",{params:{daemonId:a,uuid:t}});var e,t,a};update=e=>{return t=this.#t,a=this.#a,s=this.#s.daemonUUID,n={task_name:e},t.get("/protected_instance/asynchronous",{params:{daemonId:s,uuid:a,task_name:n.task_name}});var t,a,s,n};send=e=>{return t=this.#t,a=this.#a,s=this.#s.daemonUUID,n={command:e},t.get("/protected_instance/command",{params:{daemonId:s,uuid:a,command:n.command}});var t,a,s,n};getOutput=e=>{return t=this.#t,a=this.#a,s=this.#s.daemonUUID,n={size:"infinity"===e?void 0:e},t.get("/protected_instance/output",{params:{daemonId:s,uuid:a,size:n?.size}});var t,a,s,n};reinstallation=e=>((e,t,a,s)=>e.post("/protected_instance/install_instance",s,{params:{daemonId:a,uuid:t}}))(this.#t,this.#a,this.#s.daemonUUID,e)}class u{#n;#r;#t;constructor(e){const{api_key:t,panel_url:a,auto_catch_http_error:n}=(e=>({api_key:s().trim(e.api_key),panel_url:s().chain(e.panel_url).trim().trimEnd("/").value(),auto_catch_http_error:e.auto_catch_http_error||!1}))(e);this.#n=t,this.#r=a,this.#t=((e,t,a)=>{const s=r().create({baseURL:e});return s.defaults.headers["X-Requested-With"]="XMLHttpRequest",s.defaults.headers["Content-Type"]="application/json; charset=utf-8",s.defaults.params={apikey:t},s.interceptors.response.use((e=>(e.data={status:e.data.status||e.status,msg:e.data.msg||e.data.message||e.statusText,data:e.data.data||e.data},e)),(e=>a?Promise.resolve({data:{status:e.response?.data?.status||e.response?.status,msg:e.response?.data?.msg||e.response?.data?.message||e.response?.statusText,data:e.response?.data?.data||void 0,originError:e}}):Promise.reject(e))),s})(this.#r,this.#n,n)}get request(){return this.#t}get baseURL(){return this.#r}getOverview(){return this.#t.get("/overview")}useDaemon(e){return new i(this.#t,e)}addDaemon(e){return(async(e,t)=>{const a=await((e,t)=>e.post("/service/remote_service",t))(e,t);if(200===a.status&&200===a.data.status)return new i(e,a.data.data)})(this.#t,e)}useInstance(e,t){return t="string"==typeof t?this.useDaemon(t):t,new o(this.#t,e,t)}addInstance(e,t){return t="string"==typeof t?this.useDaemon(t):t,(async(e,t,a)=>{const s=await((e,t,a)=>e.post("/instance",a,{params:{daemonId:t}}))(e,a.daemonUUID,t);if(200===s.status&&200===s.data.status)return new o(e,s.data.data.instanceUuid,a)})(this.#t,e,t)}multiWorkerInstance(e,t){return((e,t,a)=>((e,t,a)=>e.post(`/protected_instance/multi_${a.method}`,{},{params:t.map((e=>({daemonId:e.daemonUUID,instanceUuid:e.instanceUUID})))}))(e,t.map((e=>({instanceUUID:e.InstanceUUID,daemonUUID:e.DaemonUUID}))),a))(this.#t,e,t)}}var d=exports;for(var m in t)d[m]=t[m];t.__esModule&&Object.defineProperty(d,"__esModule",{value:!0})})();